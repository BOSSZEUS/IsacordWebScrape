from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import time
import pandas as pd

def extract_color_name(full_text):
    """Extracts only the thread color name from the full description."""
    try:
        if "Isacord Embroidery Thread" in full_text:
            parts = full_text.split(" Isacord Embroidery Thread")[0]  # Remove everything after "Isacord Embroidery Thread"
            color_name = " ".join(parts.split()[1:])  # Remove the thread number and keep the color name
            return color_name
        return "Not Found"  # If description doesn't match expected format
    except Exception as e:
        return "Not Found"

def get_isacord_colors_selenium(color_numbers):
    driver = webdriver.Chrome()  # Use the appropriate driver for your browser
    driver.get("https://isacordthread.com/search.php")
    results = []

    for color_number in color_numbers:
        print(f"Searching for color number: {color_number}")
        try:
            # Enter the color number
            search_box = driver.find_element(By.CSS_SELECTOR, "#keyword-search")
            search_box.clear()
            search_box.send_keys(color_number)
            search_box.send_keys(Keys.RETURN)
            time.sleep(2)  # Wait for the page to load

            # Extract the color name
            try:
                color_name_element = driver.find_element(By.CSS_SELECTOR, "span.itemname")
                full_text = color_name_element.text.strip()
                color_name = extract_color_name(full_text)
            except:
                color_name = "Not Found"  # If no element found, return "Not Found"

            # Append structured data
            results.append({"Thread Number": color_number, "Color Name": color_name})
        except Exception as e:
            results.append({"Thread Number": color_number, "Color Name": "Not Found"})

    driver.quit()
    
    # Convert results to a structured table (DataFrame)
    df = pd.DataFrame(results)

    # Display table in terminal
    print(df.to_string(index=False))

    # Uncomment below to save as CSV or Excel
    # df.to_csv("isacord_colors.csv", index=False)
    # df.to_excel("isacord_colors.xlsx", index=False)

    return df

# Example usage
color_numbers = [
    '0015', '0015', '0017', '0017', '0020', '0020', '0124', '0124', '0131', '0131', 
    '0132', '0132', '0150', '0150', '0182', '0182', '0232', '0232', '0250', '0250', 
    '0310', '0310', '0311', '0311', '0345', '0345', '0442', '0442', '0453', '0453', 
    '0463', '0463', '0520', '0520', '0546', '0546', '0672', '0672', '0700', '0700', 
    '0704', '0704', '0722', '0722', '0776', '0776', '0800', '0800', '0811', '0811', 
    '0824', '0824', '0832', '0832', '0842', '0842', '0853', '0853', '0861', '0861', 
    '0862', '0862', '0870', '0870', '0873', '0873', '0874', '0874', '0904', '0904', 
    '0931', '0931', '0933', '0933', '0934', '0934', '0940', '0940', '0945', '0945', 
    '0970', '0970', '1055', '1055', '1060', '1060', '1061', '1061', '1115', '1115', 
    '1120', '1120', '1123', '1123', '1134', '1134', '1140', '1140', '1154', '1154', 
    '1172', '1172', '1300', '1300', '1305', '1305', '1311', '1311', '1312', '1312', 
    '1334', '1334', '1342', '1342', '1346', '1346', '1351', '1351', '1352', '1352', 
    '1355', '1355', '1362', '1362', '1366', '1366', '1375', '1375', '1430', '1430', 
    '1514', '1514', '1704', '1704', '1725', '1725', '1755', '1755', '1840', '1840', 
    '1860', '1860', '1876', '1876', '1902', '1902', '1911', '1911', '1912', '1912', 
    '1921', '1921', '1972', '1972', '2051', '2051', '2101', '2101', '2113', '2113', 
    '2123', '2123', '2152', '2152', '2153', '2153', '2155', '2155', '2160', '2160', 
    '2170', '2170', '2171', '2171', '2222', '2222', '2224', '2224', '2241', '2241', 
    '2250', '2250', '2300', '2300', '2320', '2320', '2520', '2520', '2250', '2250', 
    '2650', '2650', '2674', '2674', '2711', '2711', '2764', '2764', '2810', '2810', 
    '2830', '2830', '2900', '2900', '3040', '3040', '3062', '3062', '3102', '3102', 
    '3110', '3110', '3211', '3211', '3241', '3241', '3331', '3331', '3344', '3344', 
    '3355', '3355', '3536', '3536', '3541', '3541', '3612', '3612', '3641', '3641', 
    '3652', '3652', '3732', '3732', '3743', '3743', '3750', '3750', '3761', '3761', 
    '3810', '3810', '3815', '3815', '3820', '3820', '3842', '3842', '3900', '3900', 
    '3953', '3953', '3971', '3971', '4010', '4010', '4032', '4032', '4071', '4071', 
    '4073', '4073', '4101', '4101', '4174', '4174', '4250', '4250', '4430', '4430', 
    '4610', '4610', '4620', '4620', '4643', '4643', '5005', '5005', '5050', '5050', 
    '5100', '5100', '5220', '5220', '5324', '5324', '5326', '5326', '5374', '5374', 
    '5415', '5415', '5422', '5422', '5552', '5552', '5555', '5555', '5633', '5633', 
    '5664', '5664', '5833', '5833', '5866', '5866', '5912', '5912', '5933', '5933', 
    '5934', '5934', '5940', '5940', '5944', '5944', '6010', '6010', '6133', '6133', 
    '6156', '6156', '0010', '0021', '0042', '0101', '0105', '0108', '0110', '0111', 
    '0112', '0134', '0138', '0142', '0145', '0151', '0152', '0184', '0220', '0221', 
    '0270', '0352', '0465', '0501', '0506', '0532', '0542', '0552', '0576', '0600', 
    '0605', '0608', '0630', '0640', '0643', '0651', '0660', '0670', '0702', '0703', 
    '0713', '0721', '0731', '0741', '0747', '0761', '0763', '0781', '0821', '0822', 
    '0851', '0922', '0932', '0935', '0941', '1102', '1106', '1114', '1141', '1161', 
    '1200', '1220', '1233', '1301', '1304', '1306', '1310', '1321', '1322', '1332', 
    '1335', '1344', '1521', '1532', '1565', '1600', '1701', '1703', '1720', '1753', 
    '1760', '1761', '1800', '1805', '1874', '1900', '1903', '1904', '1906', '1913', 
    '1940', '1950', '2011', '2022', '2100', '2115', '2302', '2211', '2220', '2333', 
    '2336', '2363', '2500', '2504', '2506', '2508', '2520', '2521', '2530', '2532', 
    '2560', '2564', '2600', '2620', '2640', '2655', '2702', '2704', '2715', '2721', 
    '2723', '2732', '2776', '2864', '2900', '2905', '2910', '2920', '2944', '2954', 
    '3030', '3045', '3114', '3130', '3210', '3251', '3265', '3274', '3323', '3333', 
    '3335', '3353', '3410', '3430', '3444', '3510', '3522', '3543', '3544', '3554', 
    '3572', '3574', '3600', '3611', '3622', '3630', '3640', '3644', '3645', '3650', 
    '3710', '3713', '3730', '3746', '3770', '3830', '3840', '3852', '3853', '3901', 
    '3902', '3910', '3920', '3951', '3962', '4010', '4040', '4074', '4103', '4111', 
    '4113', '4116', '4133', '4220', '4230', '4240', '4410', '4421', '4423', '4442', 
    '4442', '4452', '4515', '4531', '4625', '4644', '4776', '5010', '5020', '5050', 
    '5101', '5115', '5210', '5230', '5233', '5335', '5400', '5411', '5450', '5500', 
    '5510', '5513', '5515', '5531', '5542', '5565', '5610', '5613', '5643', '5650', 
    '5743', '5822', '5830', '5832', '6011', '6031', '6051', '6151'
]
get_isacord_colors_selenium(color_numbers)
